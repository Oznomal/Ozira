{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","_this$props$security","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","firstName","lastName","headerLinks","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startDate","endDate","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","initalState","projectTasks","projectTask","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","Axios","_x5","Backlog","tasks","projectTasksProp","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","task","status","err","return","ProjectBoard","getBacklog","BoardContent","role","projectNotFound","ProjectBoard_Backlog","boardAlgorithm","backlogId","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","_this$props$match$par","getProjectTask","_nextProps$projectTas","updatedProject","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","event","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","console","log","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a77fc5f7.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Types for user login / registration\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\n//Dispatch is used to dispatch to the reducer\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n\r\n    //Errors were still being displayed after updating projects that\r\n    //had validation issues the first time, so to help with this we\r\n    //are going to clear the errors from the state right after\r\n    //succesfully creating a project.\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all of its data.\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  //Lifecycle Hook\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Defines the types of properties the dashboard will accept\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\n//Maps the Dashboards state to the properties\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\n//Maps the getProjects function when we connect to the store\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJwtToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJwtToken from \"../securityUtils/setJwtToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // Post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    // Extract the token from the rest data\r\n    const { token } = res.data;\r\n\r\n    // Store the token in the local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // Set our token in the headers\r\n    setJwtToken(token);\r\n\r\n    // Decode the token on react\r\n    const decoded = jwt_decode(token);\r\n\r\n    // Dispatch to the security reducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: false\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/register\" className=\"nav-link \">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/dashboard\" className=\"nav-link\" href=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/dashboard\" className=\"nav-link \">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.firstName} {user.lastName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/logout\"\r\n              className=\"nav-link\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks =\r\n      validToken && user ? userIsAuthenticated : userIsNotAuthenticated;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\" href=\"Dashboard.html\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, DELETE_PROJECT } from \"../actions/types\";\r\nimport { GET_PROJECT } from \"../actions/types\";\r\n\r\n//The initial state of the projects\r\n//There will be an empty project array\r\n//and an empty project\r\nconst initalState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initalState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projectTasks: [],\r\n  projectTask: {}\r\n};\r\n\r\nexport default function backlogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        projectTasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        projectTask: action.payload\r\n      };\r\n\r\n    //Filter method allows you to see results as soon as you delete\r\n    //a project task instead of having to wait until the page is refreshed.\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        projectTasks: state.projectTasks.filter(\r\n          projectTask => projectTask.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  return payload ? true : false;\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectIdentifier: \"\",\r\n      projectName: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectIdentifier,\r\n      projectName,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectIdentifier,\r\n      projectName,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n  }\r\n\r\n  //Lifecycle Hook\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectName: this.state.projectName,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    disabled\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(projectIdentifier, projectSequence) {\r\n    this.props.deleteProjectTask(projectIdentifier, projectSequence);\r\n  }\r\n\r\n  render() {\r\n    const { projectTask } = this.props;\r\n    let priorityString, priorityClass;\r\n\r\n    // Manipulates the color and the string of the Priority Task\r\n    if (projectTask.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (projectTask.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else if (projectTask.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {projectTask.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${\r\n              projectTask.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              projectTask.projectIdentifier,\r\n              projectTask.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import Axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlogId,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await Axios.post(`/api/backlog/${backlogId}`, projectTask);\r\n    history.push(`/projectBoard/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlogId => async dispatch => {\r\n  try {\r\n    const res = await Axios.get(`/api/backlog/${backlogId}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  projectIdentifier,\r\n  projectSequence,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await Axios.get(\r\n      `/api/backlog/${projectIdentifier}/${projectSequence}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  projectIdentifier,\r\n  projectSequence,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await Axios.patch(\r\n      `/api/backlog/${projectIdentifier}/${projectSequence}`,\r\n      projectTask\r\n    );\r\n    history.push(`/projectBoard/${projectIdentifier}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  projectIdentifier,\r\n  projectSequence\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting Project Task ${projectSequence}, this action cannot be undone.`\r\n    )\r\n  ) {\r\n    await Axios.delete(`/api/backlog/${projectIdentifier}/${projectSequence}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectSequence\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { projectTasksProp } = this.props;\r\n    const tasks = projectTasksProp.map(projectTask => (\r\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (const task of tasks) {\r\n      if (task.props.projectTask.status === \"TO_DO\") {\r\n        todoItems.push(task);\r\n      } else if (task.props.projectTask.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(task);\r\n      } else if (task.props.projectTask.status === \"DONE\") {\r\n        doneItems.push(task);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //Constructor for errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { projectTasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, projectTasks) => {\r\n      if (projectTasks.length < 1) {\r\n        if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on This Board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog projectTasksProp={projectTasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, projectTasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      projectIdentifier: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlogId, projectSequence } = this.props.match.params;\r\n    this.props.getProjectTask(backlogId, projectSequence, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      projectIdentifier,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate\r\n    } = nextProps.projectTask;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      projectIdentifier,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedProject,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">{`Project Name: ${\r\n                this.state.projectIdentifier\r\n              } | Project Task ID: ${this.state.projectSequence}`}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  projectTask: state.backlog.projectTask,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.firstName\r\n                    })}\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.firstName && (\r\n                    <div className=\"invalid-feedback\">{errors.firstName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.lastName\r\n                    })}\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.lastName && (\r\n                    <div className=\"invalid-feedback\">{errors.lastName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToPorops = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToPorops,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./securityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJwtToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    console.log(\"Token Expired, Logging Out User\");\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlogId/:projectSequence\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}